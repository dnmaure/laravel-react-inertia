<?php

namespace App\Http\Controllers;

use App\Models\{{entity}};
use Illuminate\Http\Request;
use Inertia\Inertia;

class {{entity}}Controller extends Controller
{
    public function index()
    {
        ${{entityPluralLower}} = {{entity}}::latest()->paginate(10);
        
        return Inertia::render('{{entityPlural}}/Index', [
            '{{entityPluralLower}}' => ${{entityPluralLower}},
        ]);
    }

    public function create()
    {
        return Inertia::render('{{entityPlural}}/Create');
    }

    public function store(Request $request)
    {
        $request->validate([
            {{fieldsValidation}},
        ]);

        $data = $request->all();{{fileUploadCode}}{{dateFormatCode}}

        {{entity}}::create($data);

        return redirect()->route('{{entityPluralLower}}.index')
            ->with('success', '{{entity}} created successfully.');
    }

    public function show({{entity}} ${{entityLower}})
    {
        return Inertia::render('{{entityPlural}}/Show', [
            '{{entityLower}}' => ${{entityLower}},
        ]);
    }

    public function edit({{entity}} ${{entityLower}})
    {
        return Inertia::render('{{entityPlural}}/Edit', [
            '{{entityLower}}' => ${{entityLower}},
        ]);
    }

    public function update(Request $request, {{entity}} ${{entityLower}})
    {
        $request->validate([
            {{updateFieldsValidation}},
        ]);

        $data = $request->except([{{fileFieldsList}}]); // Exclude file fields from bulk assignment{{fileUploadCode}}{{dateFormatCode}}

        ${{entityLower}}->update($data);

        return redirect()->route('{{entityPluralLower}}.index')
            ->with('success', '{{entity}} updated successfully.');
    }

    public function destroy({{entity}} ${{entityLower}})
    {
        ${{entityLower}}->delete();

        return redirect()->route('{{entityPluralLower}}.index')
            ->with('success', '{{entity}} deleted successfully.');
    }
}